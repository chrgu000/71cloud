<?php

namespace app\branchadmin\controller;

use think\Controller;
use think\Request;

class BranchMessage extends Base
{
    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {
        // 关闭模板引擎布局
        $this->view->engine->layout(false);
        $send_id = session('branchadmin_info')['id'];
        $sendInfo = model('BranchMessage')->where('send_id',$send_id)->select();
        // 接收方信息
        if ($sendInfo) {
            foreach ($sendInfo as $key => &$value) {
                $receive_id = $value->receive_id;
                $value['receive_name'] = model('BranchAdmin')->find($receive_id)->bradmin_username;
            }
        }
        return view('index',['sendInfo'=>$sendInfo]);
    }






    /**
     * 显示创建消息表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        // 关闭模板引擎布局
        $this->view->engine->layout(false);
        // 获取管理员表信息
        $branchinfo = model('BranchAdmin')->select();
        return view('create',['branchinfo'=>$branchinfo]);
    }

    /**
     * 保存新建的资源
     *
     * @param  \think\Request  $request
     * @return \think\Response
     */
    public function save(Request $request)
    {
        $data = $request->param();
         //定义验证规则
        $rule = [
            'receive_id' => 'require',
            'title' => 'require',
            'content' => 'require',
        ];
        //定义提示信息
        $msg = [
            'receive_id.require' => '收件人信息不能为空',
            'title.require' => '主题不能为空',
            'content.require' => '正文内容不能为空',
        ];
        //实例化验证类
        $validate = new \think\Validate($rule, $msg);
        //执行验证
        if( !$validate->check($data) ){
            //验证失败，报错
            $error = $validate->getError();
            $this->error($error);
        }
        $arr_receiveid = $request->param()['receive_id'];
        $content = $request->param()['content'];
        $title = $request->param()['title'];
        $temp = array();
        foreach ($arr_receiveid as $key => $value) {
            $temp[$key]['receive_id'] = $value;
            $temp[$key]['title'] = $title;
            $temp[$key]['content'] = $content;
            $temp[$key]['status'] = 0;
            $temp[$key]['send_id'] = session('branchadmin_info')['id'];
        }
        $info = model('BranchMessage')->data($temp)->saveAll($temp);
        if ($info) {
            $this->success('发布信息成功');
        }else{
            $this->error('发布信息失败');
        }
       
    }

    /**
     * 显示指定的资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function read($id)
    {
        // 关闭模板引擎布局
        $this->view->engine->layout(false);
        //查看已发送信息详情页
        // dump(basename($_SERVER['HTTP_REFERER']));die;
        if (basename($_SERVER['HTTP_REFERER']) == 'receiveindex.html') {
            // echo "从接受出获取";die;
            // 更新消息状态为已读状态
            model('BranchMessage')->get($id)->save(array('status' =>'1'),['id'=>$id]);
        }
        $message = model('BranchMessage')->get($id);
        $receive_id = $message->receive_id;
        $message['receive_name'] = model('BranchAdmin')->get($receive_id)->bradmin_username;
        return view('read',['message'=>$message]);
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function edit($id)
    {
        // 关闭模板引擎布局
        $this->view->engine->layout(false);
        $data = model('BranchMessage')->get($id);
        $data['receive_name'] = model('BranchAdmin')->get($data->receive_id)->bradmin_username;
        return view('edit',['data'=>$data]);
    }

    /**
     * 保存更新的资源
     *
     * @param  \think\Request  $request
     * @param  int  $id
     * @return \think\Response
     */
    public function update(Request $request, $receive_id)
    {
       $data = $request->param();
       $res = model('BranchMessage')->save($data,['id'=>$data['id']]);
       if ($res) {
           $this->success('消息更新成功','index');
       }
    }

    /**
     * 删除指定资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function delete($id)
    {
        $info = \app\branchadmin\model\BranchMessage::destroy($id);
        if ($info) {
            $res = [
                'code'=>'1'
            ];
            return $res;
        }
    }


    // 收信息列表展示功能模块
    public function receiveIndex()
    {
        $receive_id = session('branchadmin_info')['id'];
        $receiveInfo = model('BranchMessage')->where('receive_id',$receive_id)->select();
        foreach ($receiveInfo as $k => &$v) {
            $v['send_name'] = model('BranchAdmin')->get($v->send_id)->bradmin_username;
        }
        // dump($receiveInfo);die;
        return view('receiveIndex',['receiveInfo'=>$receiveInfo]);
    }


}
